/**
 * Mizzou Framework - Sass: Buttons
 *
 * Requires: _variables.scss
 *
 * @author Josh Hughes (hughesjd@missouri.edu), Josh Nichols (nicholsjc@missouri.edu), University of Missouri
 * @copyright 2015 Curators of the University of Missouri
 * @version 1.00
 */
 
/**
 * Sets up a button with custom attributes
 *
 * @param color $color-background Background color
 * @param color $color-text Text color
 * @param color $color-border Border color
 * @param string $size (Optional) Text size. Can be 'small' or 'large'. Defaults to 'small'
 * @param boolean $include-print-style (Optional) Whether to make the button black and white for printing. Defaults to true
 */
@mixin custom-button(
    $color-background,
    $color-text,
    $color-border,
    $color-background-hover:        $color-background,
    $color-text-hover:              $color-text,
    $color-border-hover:            $color-border,
    $size:                          'small'
)
{
    font-weight: $font-bold;
    display: inline-block;
    text-decoration: none;
    font-family: $font-default;
    cursor: pointer;
    text-align: center;
    transition-property: background, border, color;
    transition-duration: 0.1s;
    transition-timing-function: linear;
    border-style: solid;
    border-width: 1px;
    background: $color-background;
    color: $color-text;
    border: 1px solid $color-border;
    
    /* too heavy outline
    @if ($color-background == transparent) {
        border: 2px solid $color-border;
    } @else {
        border: 1px solid $color-border;
    }*/
    
    // Font size
    @if ($size == 'large') {
        font-size: 1.25em;
        padding: .3333em 1em;
        border-radius: ($base-border-radius + 2px);
    } @else { // $size == 'small'
        font-size: 1em;
        padding: .3333em 1em;
        border-radius: $base-border-radius;
    }
        
    &:hover,
    &:focus,
    &:active
    {
        background: $color-background-hover;
        color: $color-text-hover;
        border-color: $color-border-hover;
    }
}

/**
 * Sets up a button with common attributes
 *
 * @param string $size (Optional) Text size. Can be 'small' or 'large'. Defaults to 'small'
 * @param string $color (Optional) Button color. Can be 'brown', 'gold', or 'grey'. Defaults to 'brown'
 * @param string $theme (Optional) Color theme. Can be 'light' or 'dark'. Dark gives the button a lighter border. Defaults to 'light'
 * @param boolean $include-print-style (Optional) Whether to make the button black and white for printing. Defaults to true
 */
@mixin button(
    $size:                      'small',
    $color:                     'orange',
    $theme:                     'light'
)
{
    @if ($theme == 'dark') {
        @if ($color == 'gold') {
            @include custom-button(
                $color-background: $gold-300,
                $color-text: $text-color,
                $color-border: $gold-200,
                $color-background-hover: $gold-200,
                $color-border-hover: $gold-400,
                $size: $size
            );
        } @else if ($color == 'grey') {
            @include custom-button(
                $color-background: $grey-200,
                $color-text: $text-color,
                $color-border: $grey-100,
                $color-background-hover: $grey-100,
                $color-text-hover: $black,
                $color-border-hover: $white,
                $size: $size
            );
        } @else if ($color == 'transparent') {
            @include custom-button(
                $color-background: none,
                $color-text: $gold-300,
                $color-border: $gold-300,
                $color-background-hover: $grey-400,
                $color-border-hover: $gold-300,
                $size: $size
            );
        } @else { // $color == 'brown'
            @include custom-button(
                $color-background: $orange-400,
                $color-text: $white,
                $color-border: $orange-600,
                $color-background-hover: $orange-600,
                $color-border-hover: $orange-600,
                $size: $size
            );
        }
    } @else { // $theme == 'light'
        @if ($color == 'gold') {
            @include custom-button(
                $color-background: $gold-300,
                $color-text: $text-color,
                $color-border: $gold-500,
                $color-background-hover: $gold-200,
                $color-border-hover: $gold-500,
                $size: $size
            );
        } @else if ($color == 'transparent') {
            @include custom-button(
                $color-background: none,
                $color-text: $text-color,
                $color-border: $gold-500,
                $color-background-hover: $gold-200,
                $size: $size
            );
        } @else if ($color == 'grey') {
            @include custom-button(
                $color-background: $grey-600,
                $color-text: $white,
                $color-border: $black,
                $color-background-hover: $black,
                $color-text-hover: $gold-400,
                $color-border-hover: $black,
                $size: $size
            );
        } @else { // $color == 'brown'
            @include custom-button(
                $color-background: $orange-400,
                $color-text: $white,
                $color-border: $orange-600,
                $color-background-hover: $orange-600,
                $color-border-hover: $orange-600,
                $size: $size
            );
        }
    }
}